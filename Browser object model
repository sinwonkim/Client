브라우저 객체 모델(BOM)이란?
자바스크립트를 이용하면 브라우저의 정보에 접근하거나 브라우저의 여러 기능들을 제어할 수 있다.
이때 사용할 수 있는 객체 모델이 바로 브라우저 객체 모델(BOM,Brower Object Model)이다.

브라우저 객체모델은 문서객체모델과는 달리 W3C의 표준 객체 모델은 아님
하지만 이 모델은 자바스크립트가 브라우저의 기능적인 요소들을 직접 제어하고 관리할 방법을 제공해줌 
자바스크립트에서는 이러한 BOM모델의 객체들을 전역 객체로 사용할 수 있다.

Window 객체 
Window  객체는 웹 브라우저의 창Window을 나타내는 객체로, 대부분의 웹 브라우저에서 지원하고 있다.
자바스크립트의 모든 객체, 전역 함수, 전역 변수들은 자동으로 window 객체의 프로퍼티가 된다.
window 객체의 메소드는 전역 함수이며,window객체의 프로퍼티는 전역 변수가 된다.
문서 객체 모델DOM의 요소들은 모두 window객체의 프로퍼티가 된다.

브라우저 창 크기 조절
window 객체의 innerHeight와 innerWidht 프로퍼티를 이용하면,브라우저의 창 크기를 설정할 수 있다.
여기서 브라우저 창이란 웹 브라우저의 뷰포트(viewport)를 의미하며,브라우저의 툴바나 스크롤 바는 포함x
ex)
<script>
documnet.write(screenX); // 전역 변수   screenX는 해당 브라우저 창의 왼쪽 모서리와
document.write(screenY);// 전역 변수 
</script>
위의 예제처럼 자바스크립트의 모든 전역 객체,전역 함수,전역 변수를 사용할 때 window접두사를 생략o
screenX는 해당 브라우저 창의 왼쪽 모서리와 사용자 스크린의 왼쪽 모서리 사이의 거리를 반환함
또한,screenY는 해당 브라우저 창의 위쪽 모서리와 사용자 스크린의 위쪽 모서리 사이의 거리를 반환함

Document 객체
window 객체의 가장 중요한 프로퍼티 중 하나가 바로 document 객체 
document 객체는 브라우저 창에 표시되는 내용에 해당하는 문서(document)를 나타내는 객체

Location 객체
location 객체는 현재 브라우저에 표시된 HTML 문서의 주소를 얻거나,브라우저에 새 문서를 불러올 떄 사용할 수 있다.
이 객체는 Window 객체의 location 프로퍼티와 Document 객체의 location 프로퍼티에 같이 연결되어 있다.
location 객체의 프로퍼티와 메소드를 이용하면,현재 문서의 URL주소를 다양하게 해석하여 처리할 수 있다.

현재 문서의 URL 주소
location 객체의 href 프로퍼티는 현재 문서의 전체 URL 주소를 문자열로 반환함

예제

document.write('현재 문서의 주소는'+location.href + "입니다.");
document.write(location.hostname); // location 객체의 hostname 프로퍼티는 현재 문서의 인터넷 호스트 이름을 반환함

host,hostname,port,hash와 같은 location 객체의 주요 프로퍼티는 URL주소의 다양한 특성을 저장하고 있다.
이와 같은 프로퍼티는 Link객체를 통해서도 제공됨

현재 문서의 파일 경로명
location 객체의 pathname프로퍼티는 현재 문서 파일 경로명을 반환함

호스트 이름(host name)과 파일 경로명(path name)을 합쳐 URL(Uniform Resource Locator)이라고 부름
이러한 URL은 브라우저가 웹 서버로 컨텐츠를 요청할 때, 해당 컨텐츠가 어디에 있는지를 알려주기 위한 규약임

현재 창에 문서 불러오기
location 객체의 assign()메소드는 브라우저 창에 지정된 URL 주소에 존재하는 문서를 불러옴
반면에 replace()메소드는 새 문서를 불러오기 전에, 현재 문서를 브라우저의 히스토리에서 제거한다는 점이
assign()메소드와 다름 location 객체의 reload()메소드는 브라우저 창에 현재 문서를 다시 불러옴

History 





































이 내용은 TCP 스쿨을 보고 개인적으로 정리한 내용 입니다. 
