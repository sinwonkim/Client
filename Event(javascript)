이벤트(Evenet)란
이벤트란 웹 브라우저가 알려주는 HTML요소에 대한 사건의 발생을 의미함
웹 페이지에 사용된 자바스크립트는 이렇게 발생한 이벤트에 반응하여 특정 동작을 수행할 수 있다.
따라서 클라이언트 측 자바스크립트를 비동기식 이벤트 중심의 프로그래밍 모델이라고 한다.

이벤트 타입
이벤트 타입은 발생한 이벤트의 종류를 나타내는 문자열로,이벤트 명이라고도 한다.
가장 많이 사용하는 키보드,마우스,HTML,DOM,Windwo 객체 등을 처리하는 이벤트가 폭 넓게 제공됨

이벤트 명세 (Event specialfication)
예전에는 onload,onclick,onmouseover와 같이 기본적이고도 단순한 이벤트만을 사용함
하지만 웹 기술의 발전에 따라 touch와 getture와 같은 새로운 이벤트들이 빠르게 늘어남
따라서 하나의 표준만으로는 이벤트의 전체 목록을 정의할 수 없는 상황이 됨

이렇게 방대해진 이벤트를 위한 명세는 다음과 같이 정의됨
1.DOM Level3 이벤트 명세
2.HTML5 관련 이벤트 명세
3.모바일 장치를 위한 이벤트 명세

이벤트 리스너(Event listner)
이벤트 리스너란 이벤트가 발생했을 때 그 처리를 담당하는 함수를 가리키며,이벤트 헨들러라고도 함 
지정된 타입의 이벤트가 특정 요소에서 발생하면,웹 브라우저는 그 요소에 등록된 이벤트 리스너를 실행시킴

이벤트 리스너 등록
작성된 이벤트 리스너는 먼저 해당 객체나 요소에 등록되어아먄 호출될 수 있다.
객체나 요소에 이벤트 리스너를 등록하는 방법은 다음과 같다

1.이벤트의 대상이 되는 객체나 요소에 프로퍼티를 등록하는 방법
2.객체나 요소의 메소드에 이벤트 리스너를 전달하는 방법

객체나 요소에 프로퍼티를 등록하는 방법
객체나 요소에 프로퍼티로 이벤트 리스너를 등록할 떄는 다음과 같은 방법을 사용할 수 있다.
1.자바스크립트 코드에서 프로퍼티로 등록
2.HTML태그에 속성으로 등록

자바스크립트 코드에서 프로퍼티로 등록하는 방법은 거의 모든 브라우저가 대부분의 이벤트 타입을 지원하고 있다.
이 방법의 단점은 이벤트 타입별로 오직 하나의 이벤트 리스너만을 등록할 수 있다는 점이다.
1.자바스크립트 코드에서 프로퍼티로 등록
ex)
<body>
  <p id="text">이 문자열은 HTML문서가 로드되면 다른 문자열로 변경됨</p>
</body>
<script>
  window.onload = function() { // 이함수는 HTML 문서가 로드 될때 실행됨
    var text = document.getElementById('text');
    text.innerHTML = 'HTML 문서가 로드 됨';
  }
</script>
또한,다음과 같이 HTML 태그에 속성으로 이벤트 리스너를 등록할 수도 있다.
이 방법의 단점으로는 HTML 코드에 자바스크립트 코드가 추가됨으로써 가독성이 안 좋아지며,유지보수도 힘들어짐
2.HTML태그에 속성으로 등록
ex)
<p> onclick="alert('문자열을 클릭했음')"</p>

객체나 요소의 메소드에 이벤트 리스너를 전달하는 방법 
객체나 요소의 메소드에 이벤트 리스너를 전달할 떄는 다음 메소드를 사용할 수 있다.
1.addEventListner()
2.attachEvent()

addEvenetListner()메소드는 거의 모든 브라우저에서 지원하는 이벤트 리스너 등록을 위한 메소드이다.
이 메소드의 원형은 다음과 같다.

원형
대상객체.addEventListner(이벤트명,실행할이벤트리스너,이벤트전파방식)

1.이벤트 명:이벤트 리스너를 등록할 이벤트 타입을 문자열로 전달함
2.실행할 이벤트 리스너:지정된 이벤트가 발생했을 때 실행할 이벤트 리스너를 전달함
3.이벤트 전파 방식:false면 버블링 방식으로,true면 캡쳐링방식으로 이벤트를 전파

이벤트 리스너 호출 
이벤트 리스너가 등록되고 해당 객체나 요소에 지정된 타입의 이벤트가 발생하면,브라우저는 자동으로 등록된 이벤트 리스너를 호출함
이떄 이벤트 리스너는 인수로 이벤트 객체를 전달받으며,식별자를 통해 전달받은 이벤트 객체를 참조함

이벤트 객체
이벤트 객체란 특정 타입의 이벤트와 관련이 있는 객체

이벤트 객체는 해당 타입의 이벤트에 대한 상세 정보를 저장하고 있다.
모든 이벤트 객체는 이벤트의 타입을 나타내는 type 프로퍼티와 이벤트의 대상을 나타내는 target 프로퍼티를 가짐
이러한 이벤트 객체는 이벤트 리스너가 호출될 떄 인수로 전달됨
ex)
<body>
<h1>이벤트 객체</h1>
<button id="btn"></button>
<p id="text"></p>
</body>
<script>
var btn = docuemnt.getElementById('btn');// 아이디가 'btn'인 요소를 선택함 
btn.addEventListener('click',addClcik());  // 선택한 요소에 에드이벤스리스너 메소드 사용해서 click이벤트 리스너를 등록함

function addClcik(){
 doucument.getElementById('text').innerHTML = "이벤트 타입은 : "+event.type +"이벤트의 대상은 :"+event.target;
}
</script>

이벤트 호출 순서
addEventListener()메소드를 사용하면 하나의 이벤트 타입에 여러 개의 이벤트 리스너를 등록할 수 있다.
이떄 특정 타입의 이벤트가 발생하면 브라우저는 다음과 같은 순서로 이벤트를 호출하게 됨
1.이벤트의 대상이 되는 객체나 요소에 프로퍼티로 등록한 이벤트 리스너를 가장 먼저 호출함
2. 그 후 addEventListener()메소드를 사용하여 등록한 이벤트 리스너를 등록한 순서대로 호출함


이벤트 전파
이벤트 전파란 이벤트가 발생했을때,브라우저가 이벤트 리스너를 실행시킬 대상 요소를 결정하는 과정을 의미함

이벤트 대상이 Window 객체와 같은 단일 객체라면 이벤트의 전파는 일어나지 않음
하지만 Document 객체나 HTML 문서의 요소에서 이벤트가 일어나면 대상 요소를 결정하기 위해 이벤트의 전파가 일어난다

이벤트 전파 방식은 크게 다음 두 가지 방식으로 구분됨
1.버블링 전파 방식
2.캡쳐링 전파 방식




















이 내용은 TCP스쿨 내용을 보고 개인적으로 정리하여 작성한 내용 입니다.
