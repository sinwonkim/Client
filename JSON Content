JSON문법 
JSON은 자바스크립트의 객체 표기법에서 리터럴과 프로퍼티를 표현하는 방법만 가져와서 사용
따라서 JSON 데이터는 모양과 규칙이 매우 단순
그로 인해 브라우저 영역에서도 쉽고 빠르게 그 의미를 해석할 수 있으며,다른 프로그래밍 언어에서도 구현하기 쉽다.

리터럴(literal)
리터럴은 변수와 다르게 해석되는 값 그자체를 의미함
ex)
12 // 숫자 리터럴
"JSON" // 문자열 리터럴
true // 불리언 리터럴

변수(variable)란 데이터를 저장할 수 있는 메모리 공간을 의미하며,그 값이 변경될 수 있다.

객체(object)
객체란 실생활에서 우리가 인식할 수 있는 사물로 이해할 수 있다.
JSON에서 객체란 이름(name)과 값(value)로 구성된 프로퍼티(property)의 정렬되지 않은 집합

"자동차"객체를 나타내는 예제
ex)
{
"name": "뉴투우싼",
"price":3000,
"age":2,
"weight":"3800Kg",
}

JSON구조
JSON은 자바스크립트의 객체 표기법으로부터 파생된 부분 집합
따라서 JSON데이터는 자바스크립트 객체 표기법에 따른 구조로 구성됨
1.JSON데이터는 이름과 값의 쌍으로 이루어짐
2.JSON데이터는 쉼표 로 나열됨
3.객체는 중괄호로 {}  
4.배열은 대괄호 []


JSON데이터
JSON 데이터는 이름과 값의 쌍으로 구성


문법
"데이터 이름": 값
ex)
"자동차":"투싼"
데이터의 이름도 문자열이므로,항상 큰 따옴표 사용할것
데이터 값으로는
1.숫자
2.문자열
3.불리언
4.객체
5.배열
6.NULL 같은 타입 올수 있다.

JSON배열
"자동차": [
  {"name":"","price":""} , {"name":"","pricle":""},{"name":"","price":""}
[

이스케이프 시퀀스 
이스케이프 시퀀스는 문자열이 화면에 출력될 떄 사용하게 될 특문자 위해 만들어짐
ex)
/b 백스페이스
/n 개행 등

JSON에서는 불리언 값 항상 true와 false를 소문자로 표기해서 사용할 것


객체
JSON에서 객체란 데이터 이름과 값의 한 쌍으로 구성된 프로퍼티의 정렬되지 않은 집합을 의미 {} 로 둘러 싸임
객체에 저장되는 프로퍼티는 데이터 이름과 + 값의 한쌍으로 이루어짐
JSON객체는 쉼표, 사용하여 이러한 프로퍼티 여러개 가질 수 있음
프로퍼티 순서 중요X BUT 데이터 이름은 문자열로 반드시 큰 따옴표 ""  사용할 것

"자동차" : {
"name" : "투싼",
"price" : 2000,
"color" : "blue"
"owner" : {
  "ownername" : "sinwon"
  "phonenumber" : 0107722777777777
}
}
상위 객체 자동차  4개의 데이터  onwername라는 객체 안에 2개의 데이터

배열과 객체의 차이점
JSON에서 배열과 객체는 여러 데이터를 묶어 놓은 집합이라는 점에서 비슷 
but 객체는 프로퍼티의 집합이며, 배열은 데이터 값의 집합이라느 차이 있다.

대부분의 프로그래밍 언어에서 배열은 여러 타입의 데이터를 동시에 가질수 x  but 자바스크립트 기반의 
JSON 배열은 여러 타입의 배열요소 가질 수 있다.

null
JSON에서 null이란 아무런 값도 가지고 있지 않은 빈 값을 의미

undefined와 null
JSON에서 undefined 타입을 제공하지x 
'값'자체가 없다는 의미의 undefined값은 초기화되지 않은 변수나 존재하지 않는 값에 접근할 때 반환
하지만 JSON에서 null이란 '값'을 가지고 있지 않다는 의미를 가지는 하나의 데이터값이라고 할 수 있다.

JSON 스키마 
JSON은 좀 더 쉽게 데이터를 교환하고 저장하기 위하여 만들어진 데이터 교환 표준
이때 JSON데이터를 전송받는 측에서 전송받은 데이터가 적법한 형식의 메타데이터인지를 확인할 방법이 필요
따라서 적법한 JSON데이터의 형식을 기술한 문서를 JSON스키마라고 한다.

JSON 스키마 검증(validation)
JSON 스키마는 다음과 같은 세가지 검증 과정을 거침

1.데이터의 타입이 정확한가
2.필수로 받아와야 하는 데이터가 포함되어 있는가?
3.데이터가 원하는 범위 안에 있는가?

JSON스키마에서는 위와 같은 검증 기준을 모두 키워드를 이용하여 직접 명시할 수 있다.

검증 키워드 validation keywords
JSON 스키마에서는 검증 기준을 명시하기 위해서 여러 키워드를 사용할 수 있다.

JSON 스키마에서 사용할 수 있는 대표적인 검증 키워드는 다음과 같다.
type 유효데이터 타입을 명시함
properties 유효한 데이터 이름과 값의 쌍들을 명시함
required 명시한 배열의 모든 요소를 프로퍼티로 가지고 있어야 유효함
등등 필요할때 찾아서 참고하면 될듯 하다.

또한,스키마에 대한 정보를 나타내는 메타 데이터키워드는 다음과 같다
1.title
2.description
3.default

ex)
{

"title":"자동차 스키마",
"description" :"이 스키마는 자동차에 관한 데이털르 검증하기 위해 작성된 스키마임",
"type" : "object",
"properties" : {
  "name" : {"type":"string" },


 }
}

type키워드를 사용하여 유효한 타입을 명시하면,해당 데이터가 유효한지를 검사할 수 있다.
이떄 사용할 수 있는 타입에는 JSON의 기본 타입을 모두 사용o
properties 키워드를 사용하면,해당 객체가 가지는 프로퍼티가 유효한지를 검사할 수 있다.


정수 검증
type 키워드의 값을 integer로 명시하면,해당 데이터가 정수인지를 검사해줌
ex)
{
 "type" : "integer"
}

정규표현식 검증
pattern 키워드 사용 하면됨 사용하고 싶으면 그때 찾아서 사용하면 될듯

자바스크립트와 JSON
JSON은 자바스크립트의 객체 표기법을 제한하여 만든 텍스트 기반의 데이터 교환 표준 
따라서 JSON데이터는 자바스크립트가 자주 사용되는 웹 환경에서 사용하는 것이 유리

자바스크립트에서 JSON데이터를 분석하고 사용하는 것은 매우 간단
자바스크립트는 JSON데이터를 처리하기 위한 다음과 같은 메소드를 제공
1.JSON.stringify()
2.JSON.parse()
3.toJSON()

JSON.stringify() 메소드
JSON.stringify()메소드는 인수로 전달받은 자바스크립트 객체를 문자열로 변환하여 반환

문법
JSON.stringify(value)

value에는 변환할 자바스크립트 객체를 전달함 
이 메소드는 UTF-16으로 인코딩된 JSON형식의 문자열을 반환







































