CSS개요
웹 페이지의 스타일과 내용적인 부분을 서로 분리해 놓은 서식을 스타일 시트라고 함 

CSS란?
CSS는 Cascading Style Sheets의 약자 
CSS는 HTML 요소들이 각종 미디어에서 어떻게 보이는가를 정의하는데 사용되는 스타일 시트 언어

CSS를 사용하는 이유
HTML만으로 웹 페이지를 제작할 경우 HTML 요소의 세부 스타일을 일일이 따로 지정해주어야만 함 
이 작업은 매우 많은 시간이 걸리며, 완성한 후에도 스타일의 변경 및 유지보수가 매우 힘듬 
이러한 문제점을 해소하기 위해 W3C(World Wide Web Consortium)에서 만든 스타일 시트 언어가 바로 CSS이다.

CSS는 웹 페이지의 스타일을 별도의 파일로 저장할 수 있게 해주므로 사이트의 전체 스타일을 손쉽게 제어 할 수 있다.

a { background-color: red; }
선택자      속성명     속성값    ;  선언끝 

CSS의 문법은 선택자(selector)와 선언부(declaratives)로 구성됨
선택자는 CSS를 적용하고자 하는 HTML요소(element)를 가리킴 
선언부는 하나 이상의 선언들을 세미콜론(;)으로 구분하여 포함할 수 있으며, 중괄호{}를 사용하여 전체를 둘러쌈 
각 선언은 CSS 속성명(property)와 속성값(value)을 가지며, 그 둘은 콜론 : 으로 연결 됨 
이러한 CSS선언(declaration)은 언제나 마지막에 세미콜론;으로 끝마침

CSS 선택자
스타일을 적용할 HTML요소를 가리키는 데 사용하는 선택자는 다음과 같다
-HTML 요소 선택자
-아이디id 선택자
-클래스 선택자
-그룹 선택자

HTML 요소 선택자
<style>
  h2 { color:teal; text-decoration:underline;}
</style>

아이디(id)선택자 
아이디 선택자는 css를 적용할 대상으로 특정 요소를 선택할 떄 사용함 
이 선택자는 웹 페이지에 포함된 여러 요소 중에서 특정 아이디 이름을 가지는 요소만을 선택해 줌 
<style>
  #head { color:blue; text-decoration:line-through;}
<style>

<h2 id="head">여기 부분 스타일 적용</h2>

HTML과 CSS에서는 하나의 웹 페이지에 속하는 여러 요소에 같은 아이디 이름을 사용해도 별 문제없이 동작함
하지만 이렇게 중복된 아이디를 가지고 자바스크리트 작업을 하게 되면 오류가 발생함
따라서 하나의 웹 페이지에 속하는 요소에는 다른 아이디 이름을 사용하거나 클래스를 사용하는 것이 좋다.

클래스(class)선택자
클래스 선택자는 특정 집단의 여러 요소를 한번에 선택할 떄 사용 
이러한 특정 집단을 클래스(class)라고 함 ,같은 클래스 이름을 가지는 요소들을 모두 선택해줌 
<style>
  .head{ color:red; text-decoration:overline;}
</style>

<h2 class="head">이 부분 스타일 적용</h2>
<h3 class="head">이 부분도 스타일 적용</h3>
그룹(group)선택자 
그룹 선택자는 위에서 언급한 여러 선택자를 같이 사용하고자 할 떄 사용함
그룹 선택자는 여러 선택자를 쉼표, 로 구분하여 연결함
ex)
<style>
  h1{ color:navy;}
  h1,h2{text-align:center;}
</style>

스타일 시트
1.인라인 스타일 HTML요소 내부에 style속성을 사용하여 css스타일 적용하는 방법
2.내부 스타일 시트  HTML문서내의 <style>태그를 사용하여 css스타일을 적용
3.외부 스타일 시트   웹 사이트 전체의 스타일을 하나의 파일에서 변경할 수 있도록 해줌  
                    스타일을 적용할 웹페이지에 <link>태그를 사용하여 외부스타일 시트를 포함해야만 스타일이 적용됨
                    
스타일 적용의 우선순위
1.인라인 스타일이 적용됨 내부나 외부 스타일 시트와는 상관없이 무조건 인라인 스타일 적용됨
2.내부 스타일 시트와 외부 스타일 시트는 가장 마지막에 적용된 스타일 시트가 적용됨

ex)
<link rel="stylesheet" href="외부 스타일 시트 끌어올 경로.css">

<h1>이 부분 외부 스타일 시트 적용</h1>
<h2> style="color:blue; text-decoration:line-through">이 부분은 인라인 스타일과 외부 스타일 시트 둘다 적용됨</h2>

따라서 웹 사이트의 스타일 적용은 외부 스타일 시트를 사용하는 것이 유지 보수도 편하며, 가장 안정적이다.

CSS에서 사용할 수 있는 background 속성은 다음과 같다
1.background-color
2.background-image
3.background-repeat
4.background-positon
5.background-attachment

background-color 속성은 해당 HTML요소의 배경색(background color)를 설정함

<style>
  body {background-color:lightblue;}
  h1 { background-color:rgb(125,128,0);}
  p { background-color:#FFFFCC;}
</style>  

backgorund-image 속성
background-image 속성은 해당 HTML요소의 배경으로 나타날 배경 이미지를 설정함
설정된 배경 이미지는 기본 설정으로 HTML요소 전체에 걸쳐 반복되어 나타남
ex)
<style>
  body { background-image:url("이미지경로");}
</style>

background-repeat 속성
배경 이미지는 기본 설정으로 수평과 수직 방향으로 모두 반복되어 나타남
background-repeat 속성을 이용하면 이러한 배경 이미지를 수평이나 수직 방향으로만 반복되도록 설정할 수 있다.
ex)
<style>
    body{ background-image:url("이미지경로"); background-repeat:repeat-x;}   // repeat-y; 는 수직반복   no-repeat;  반복x 
</style>

backgroud-position 속성 
background-position 속성은 반복되지 않는 배경 이미지의 상대 위치 relative position을 설정합니다.
ex)
<style>
  body {
    backgorund-image:url("이미지경로");
    background-repeat:no-repeat;
    background-position:top right;
  }
</style>

background-attachment 속성
background-attachment 속성을 사용하여 위치가 설정된 배경 이미지를 해당 위치에 고정시킬 수도 있음
이렇게 고정된 배경 이미지는 스크롤과는 무관하게 화면위치에서 이동하지x

<style>
  body {
    background-image:url("이미지 경로");
    background-repeat:no-repeat;
    background-position:left bottom;
    background-attachment:fixed;
  }
</style>

background 속성 한번에 적용하기 
위에서 언급한 모든 background속성을 이용한 스타일을 한줄에 설정할 수 있다.
<style>
  body {background:#FFCCCC url("이미지경로") no-repeat lfet bottom fixed;}
</style>

CSS background 속성 
background 모든 background 속성을 이용한 스타일을 한 줄에 설정할 수 있음
background-color HTML요소의 배경색을 설정함
background-image HTML요소의 배경 이미지를 설정함
background-repeat 설정된 배경 이미지의 반복 유무를 설정함
background-position 반복되지 않는 배경 이미지의 상대 위치를 설정함
background-attachment 배경 이미지를 스크롤과는 무관하게 해당 위치에 고정시킴

letter-spacing 속성
letter-spacing 속성은 텍스트 내에서 글자 사이의 간격을 설정함 
ex)
<style>
  .spacing { letter-spacing: -3px;}
</style>

<p class="spacing">글자 간격</p>                    
 text-indent 속성
 text-indent 속성은 단락의 첫 줄에 들여쓰기할지 안 할지를 설정함

text-decoration 속성 
text-decoration 속성은 텍스트에 여러 가지 효과를 설정하거나 제거하는데 사용합니다.
ex)
<style>
  h2 {text-decoration:overline;} 
  h3 {text-decoration:line-through;}
  h4 {text-decoration:underline;}
  a { text-decoration:none; }
</style>
  
  text-transform 속성 
  text-transform 속성은 텍스트에 포함된 영문자에 대한 대소문자를 설정합니다.
  이 속성은 텍스트에 포함된 모든 영문자를 대소문자나 소문자로 변경시켜 줌
  또한, 단어의 첫 문자만을 대문자로 변경시킬 수도 있음
<style>
  h2 {text-transform:uppercase;}
  h3 {text-transform:lowercase;}
  h4 {text-transform:capitalize;}
</style>
text-transform속성은 한글에는 영향x 오직 영문자에만 적용됨

line-height속성
line-height 속성은 텍스트의 줄 간격을 설정함
ex)
<style>
  .narrowLineHeight{line-height:0.8;}
</style>

CSS를 사용하면 웹 페이지에 나타나는 글꼴(Font)를 다양하게 설정할 수 있다.
CSS에서 사용할 수 있는 font 속성은 
1.font-family
2.font-style
3.font-variant
4.font-weight
5.font-size

font-size 속성
제목을 위한 HTML요소인<h1>태그부터<h6>태그를 사용해야 한다.

CSS링크
CSS를 사용하면 링크에 다양한 효과를 설정할 수 있다.
링크(link)에는 color,font-family,backgroun 속성 등 CSS의 다양한 속성들을 적용할 수 있다.
또한,text-decoration 속성값을 none으로 설정하여, 링크가 연결된 텍스트의 밑줄을 제거 할 수 있다.

ex)
<style>
  a{
    background-color:red;
    color:darkslategray;
    font-size:1.3em;
    text-decoration:none;
  }
</style>

링크의 상태 
1.link
2.visited
3.hover 사용자의 마우스 커서가 링크위에 올라가 있는 상태
4.active 사용자가 마우스로 링크를 클릭하고 있는 상태
5.focus

링크를 활용한 버튼(Button)
CSS를 이용하면 간단하게 링크를 버튼처럼 만들 수 있다.
ex)
<style>
  a:link,a:visited {
      background-color:red;
      color:maroon;
      padding:15px 25px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
  }
  a:hover, a:active { background-color : blue;}
</style>
<body>
  <h1>링크를 활용한 버튼</h1>
  <p><a href="끌어올 경로" target="_blank">홈 가기</a></p>
</body>

list-style-type 속성
리스트 요소의 앞에 위치하는 숫자나 기호를 마커(marker)라고 한다.
list-style-type 속성을 이용하면 리스트에 다양한 마커(marker)를 적용할 수 있다

list-style-image속성
list-style-image속성을 이용하면 마커(marker)로 자신만의 이미지를 사용할 수 있다.
ex)
<style>
  .imageMarker{list-style-image:url("이미지경로");}
</style>
<ul class="imageMarker">
		<li>Apple</li>
</ul>


list-style-position 속성
list-style-position 속성을 이용하면 리스트 요소의 위치를 설정할 수 있음 
list-style-position 속성의 기본 속성값은 outside로 설정되어 있다.

list-style 속성 한번에 적용하기 
ex)
<style>
	ul {list-style:square inside url("");}
</style>

border 속성
border 속성으로 테이블의 테두리(border)를 설정할 수 있다.
이 속성을 명시하지 않으면 해당 테이블은 기본 설정으로 빈 테두리를 가지게 된다.
ex)
<style>
	table,th,td { border:2px solid red; }
</style>

border-collapse 속성
border-collapse 속성값을 collapse로 설정하면 해당 테이블의 테두리는 한 줄로 표현됨
이 속성을 명시하지 않으면 해당 테이블은 기본 설정으로 테이블 요소별 테두리를 모두 표현하게 됨
ex)
<style>
	table,th,td{border:2px solid red;}
	table {border-collapse:collapse;}
</style>


text-align 속성
text-align 속성은 테이블 요소(th,td)내부에서 텍스트의 수평 방향 정렬을 설정함
<th>태그 내부는 가운데 정렬이,<td>태그 내부는 왼쪽 정렬이 기본 설정 

CSS 이미지 스프라이트(Image Sprite)
이미지 스프라이트(image sprite)란 여러 개의 이미지를 하나의 이미지로 합쳐서 관리하는 이미지를 의미

웹 페이지에 이미지가 사용될 경우 해당 이미지를 다운받기 위해 웹 브라우저는 서버에 이미지를 요청하게 됨
하지만 사용된 이미지가 많을 경우 웹 브라우저는 서버에 해당 이미지의 수만큼 요청해야 하므로 웹 페이지의 로딩 시간이 오래걸림

이미지 스프라이트(image sprite)를 사용하면 이미지를 다운받기 위한 서버 요청을 단 몇번으로 줄일 수 있다.
모바일 환경과 같이 한정된 자원을 사용하는 플랫폼에서는 웹 페이지의 로딩 시간을 단축해주는 효과가 있다.
또한,많은 이미지 파일을 관리하는 대신 몇 개의 스프라이트 이미지파일만을 관리하면 되므로 매우 간단

하나의 이미지만을 사용해 아이콘 4개 만드는거
ex)
<style>
	.up, .down, .right, .left { background: url("이미지경로") no-repeat; }
</style>
<body>
	// class 붙이고 공통 백그라운드(이미지)를 먹임 
	<div class="up"></div>
	<div class="down"></div>
</body>

크기 단위
CSS에서 사용하는 크기의 단위에는 %,ex,px,cm,mm,inch등이 있다

1.백분율 단위 기본 크기를 100%로 놓고, 그에 대한 상대적인 크기를 설정
2.배수 단위em 해당 글꼴(font)의 기본 크기를 1em으로 놓고, 그에 대한 상대적인 크기를 설정함
3.픽셀 단위px 픽셀 단위(px)는 스크린의 픽셀(pixel)을 기준으로 하는 절대적인 크기를 설정

1배 = 1em = 100%

크기(Demension)
CSS를 이용하면 HTML요소의 크기를 마음대로 설정할 수 있다.
CSS에서 크기 조절을 위해 사용할 수 있는 속성은 다음과 같다.

1.height
2.width
3.max-width
4.min-width
5.max-height
6.min-height

height와 width 속성
height와 width 속성은 HTML요소의 높이와 너비를 각각 설정함
이 속성의 기본 설정값은 auto이며, 웹 브라우저가 각 HTML 요소에 맞게 자동으로 높이와 너비를 설정해 줌 

ex)
<style>
	div { 
		height:200px; width;500px; 
		border:2px solid lightsalmon;
	} 
</style>

max-width 속성
max-width 속성은 해당 HTML 요소가 가질 수 있는 최대 너비(width)를 설정함
이 속성의 기본 설정값은 nono이며, 해당 HTML 요소의 너비에 제한을 두지 않겠다는 의미

width 속성으로 너비를 설정하면, 설정된 너비 이하로 브라우저의 크기가 줄어들 떄 해당 요소에 스크롤 바를 생성
하지만 max-width 속성으로 너비를 설정하면 다음과 같이 좀 더 유연한 결과를 얻을 수 있다.
max-width 속성으로 너비를 설정하면 줄어드는 웹 브라우저의 크기에 맞춰 해당 HTML요소의 너비도 자동으로 줄어듬


max-height 속성
max-height 속성은 해당 HTML 요소가 가질 수 있는 최대 높이(height)를 설정함
이 속성의 기본 설정값은 none이며, 해당 HTML 요소의 크기에 따라 높이가 자동으로 설정됨

max-hieght속성으로 최대 높이를 설정하면, 해당 HTML 요소의 높이를 설정된 높이 이하로 제한함 
만약 해당 요소의 높이가 설정된 높이보다 클 경우에는 수직 스크롤 바를 생성하게 됨
ex)
<style>
	p { max-height:50px; overflow:auto; }
</style>

박스 모델(box model)
모든 HTML 요소는 박스(box)모양으로 구성되며, 이것을 박스 모델이라고 부름 
박스 모델은 HTML 요소를 패딩(padding),테두리(border),마진(margin),그리고 내용(content)로 구분 

1.내용(content): 텍스트나 이미지가 들어있는 박스의 실질적인 내용 부분 
2.패딩(padding): 내용과 테두리 사이의 간격 패딩은 눈에 보이지x
3.테두리(border): 내용과 패딩 주변을 감싸는 테두리 
4.마진(margin): 테두리와 이웃하는 요소 사이의 간격 마진은 보이지x

height와 width 속성의 이해 
모든 웹 브라우저에서 정확하게 HTML요소들을 표현하려면 이러한 박스 모델이 어떻게 동작하는지 알아야 함
CSS에서 height와 width 속성을 설정할 떄 그 크기가 가르키는 부분은 내용(content)부분만을 대상으로 함 
HTML요소의 height와 widht 속성으로 설정된 높이와 너비에 패딩(padding),테두리(border),마진(margin)의 
크기는 포함되지x

ex)
<style>
	div {width:320px;
	padding:10px;
	border:5px solid red;
	margin:0;
	}
</style>
<body>
	<div>div 요소 전체 너비는 350px 이됨  div요소에 너비 320 + padiing좌우 합 20 + border 좌우합 10</div>
</body>

HTML요소의 높이와 너비 구하기

전체 너비(width)를 계산해 보면
width(70px) + left margin(10px) + left padding(5px) + right padding(5px) + right margin(10px) = 100px 이 됩니다.

HTML 요소의 전체 높이(height)를 계산하는 공식은
height + top padding + bottom padding + top border + bottom border + top margin + bottom margin 입니다.

이때 마진(margin)영역의 크기는 눈으로 바로 확인할 수 없을 것 
why? 마진이란 테두리(border)와 이웃하는 요소 사이의 간격이면서, 배경색의 영향을 받지 않기 떄문 
but HTML 요소가 차지하는 크기에는 포함됨

익스8포함 이전 버젼에서는 width나 height 속성으로 설정한 너비와 높이에 패딩과 테두리의 크기까지 포함됨
이러한 차이점 없애기 위해 HTML문서에 <!DOCTYPE html>태그를 삽입해야만 함

패딩(padding)속성
CSS에서는 HTML요소의 패딩 영역을 설정하기 위해 다음과 같은 속성을 제공
1.padding-top
2.padding-right
3.padding-bottom
4.padding-left

패딩 축약표현(padding shorthand)
모든 padding 속성을 이용한 스타일을 한 줄에 설정할 수 있다.
ex)
<style>
	div{
		background-color:red;  // div요소 배경색 
		color:white; // div요소안에 글자색
		border:3px solid blue;	// 가장자리 너비와 색깔	solid는 실선(가장자리 스타일)
	}
	div.ab{padding : 20px 50px 30px 50px;}
 			 top right bottom left
</style>
<body>
	<div class="ab">패딩 축약형으로 적용</div>
</body>

마진(Margin)
margin속성은 테두리(border)와 이웃하는 요소 사이의 간격인 마진 영역의 크기를 설정함 
이러한 마진 영역은 패딩 영역과는 달리 background-color 속성으로 설정하는 배경색의 영향을 받지x
CSS를 사용하면 마진 영역의 크기를 방향별로 따로 설정할 수 있다.

margin 속성값에 auto를 사용하는 이유 

margin 속성값을 auto로 설정하면,웹 브라우저가 수평 방향 마진(margin)값을 자동으로 설정함 
즉,해당 HTML 요소의 왼쪽과 오른쪽  마진을 자동으로 설정함
그 결과 해당요소는 그 요소를 포함하고 있는 부모(parent)요소의 정중앙에 위치하게 됨
ex)
<style>
	div{
		border:2px solid red;
		width:350px;
		margin:auto;
	}
</style>


display 속성




























이 내용의 본 원작물의 저작권은 TCP 스쿨 입니다.     TCP 스쿨을 보고 개인적으로 정리한 내용 입니다.
















